{"version":3,"sources":["components/quote/Quote.js","components/quote/NewQuote.js","components/quote/TweetQuote.js","components/QuoteMachine.js","App.js","index.js"],"names":["Quote","props","id","quote","author","NewQuote","onClick","fetchNewQuote","TweetQuote","text","tweetEncode","encodeURIComponent","join","href","target","title","class","QuoteMachine","state","newQuote","bind","fetch","then","response","json","data","main_quote","quotes","setState","this","className","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAeeA,MAbf,SAAeC,GACX,OACI,gCACI,qBAAKC,GAAG,OAAR,SACI,4BAAID,EAAME,UAEd,qBAAKD,GAAG,SAAR,SACI,4BAAID,EAAMG,eCCXC,MARf,SAAkBJ,GACd,OACI,8BACI,wBAAQC,GAAG,YAAYI,QAASL,EAAMM,cAAtC,0BCkBGC,MArBf,SAAoBP,GAChB,IAEMQ,EAAOR,EAAME,MACbC,EAASH,EAAMG,OAEfM,EAAW,UADK,oCACL,oBAA+BC,mBAL/B,CAAC,UAK0DC,KAAK,MAAhE,oBAAiFD,mBAJlF,CAAC,gBAI4GC,KAAK,MAAjH,iBAA+HD,mBAAmBF,EAAO,MAAQL,IAElL,OACI,8BAEI,mBAAGF,GAAG,cAAcW,KAAMH,EAAaI,OAAO,OAAOC,MAAM,mBAA3D,SACI,iCACI,uBACA,mBAAGC,MAAM,6CCoCdC,G,wDA5Cd,WAAYhB,GAAQ,IAAD,8BAClB,cAAMA,IAEDiB,MAAQ,CACZf,MAAO,GACPC,OAAQ,IAGT,EAAKe,SAAW,EAAKA,SAASC,KAAd,gBARE,E,4CAWnB,WAAY,IAAD,OAEVC,MADgB,4DAEdC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACL,IAAMC,EAAaD,EAAKE,OAAO,GAC/B,EAAKC,SAAS,CACbzB,MAAOuB,EAAWjB,KAClBL,OAAQsB,EAAWtB,c,+BAKvB,WACCyB,KAAKV,a,oBAGH,WACI,OACL,sBAAKjB,GAAG,WAAR,UACC,qBAAK4B,UAAU,cACf,+CACA,sBAAK5B,GAAG,YAAY4B,UAAU,MAA9B,UACC,cAAC,EAAD,CAAO3B,MAAO0B,KAAKX,MAAMf,MAAOC,OAAQyB,KAAKX,MAAMd,SACnD,cAAC,EAAD,CAAUG,cAAesB,KAAKV,WAC9B,cAAC,EAAD,CAAYhB,MAAO0B,KAAKX,MAAMf,MAAOC,OAAQyB,KAAKX,MAAMd,YAEzD,qBAAK0B,UAAU,qB,GAvCQC,cCGZC,MARf,WACE,OACE,qBAAKF,UAAU,MAAf,SACE,cAAC,EAAD,OCANG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e44937f7.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Quote(props) {\n    return (\n        <div>\n            <div id=\"text\">\n                <p>{props.quote}</p>\n            </div>\n            <div id=\"author\">\n                <p>{props.author}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Quote\n","import React from 'react'\n\nfunction NewQuote(props) {\n    return (\n        <div>\n            <button id=\"new-quote\" onClick={props.fetchNewQuote}>New Quote</button>\n        </div>\n    )\n}\n\nexport default NewQuote\n","import React from 'react'\n\nfunction TweetQuote(props) {\n    const hashtags = [\"quotes\"];\n    const related = [\"freecodecamp\"];\n    const text = props.quote;\n    const author = props.author;\n    const twitterIntent = 'https://twitter.com/intent/tweet?'\n    const tweetEncode = `${twitterIntent}hashtags=${encodeURIComponent(hashtags.join(','))}&related=${encodeURIComponent(related.join(','))}&text=${encodeURIComponent(text + '  -' + author)}`\n\n    return (\n        <div>\n            {/* change this later to twitter icon */}\n            <a id=\"tweet-quote\" href={tweetEncode} target=\"_top\" title=\"Tweet this quote\">\n                <span>\n                    <br />\n                    <i class=\"fab fa-twitter fa-2x circle-logo\"></i>\n                </span>\n            </a>\n        </div>\n    )\n}\n\nexport default TweetQuote\n","import React, { Component } from 'react';\nimport Quote from './quote/Quote';\nimport NewQuote from './quote/NewQuote';\nimport TweetQuote from './quote/TweetQuote';\nimport './quote_box.css';\n\n\nclass QuoteMachine extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\n\t\tthis.state = {\n\t\t\tquote: '',\n\t\t\tauthor: ''\n\t\t};\n\n\t\tthis.newQuote = this.newQuote.bind(this);\n\t}\n\n\tnewQuote() {\n\t\tconst API_URI = 'https://goquotes-api.herokuapp.com/api/v1/random?count=1';\n\t\tfetch(API_URI)\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => {\n\t\t\t\tconst main_quote = data.quotes[0];\n\t\t\t\tthis.setState({\n\t\t\t\t\tquote: main_quote.text,\n\t\t\t\t\tauthor: main_quote.author\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.newQuote();\n\t}\n\t\n    render() {\n        return (\n\t\t\t<div id=\"app-body\">\n\t\t\t\t<div className='box space' />\n\t\t\t\t<h1>Random Quotes</h1>\n\t\t\t\t<div id=\"quote-box\" className=\"box\">\n\t\t\t\t\t<Quote quote={this.state.quote} author={this.state.author} />\n\t\t\t\t\t<NewQuote fetchNewQuote={this.newQuote} />\n\t\t\t\t\t<TweetQuote quote={this.state.quote} author={this.state.author} />\n\t\t\t\t</div>\n\t\t\t\t<div className='box space' />\n\t\t\t</div>\n        );\n    }\n}\n\nexport default QuoteMachine;\n\n\n\n\n/*\n\nid=\"quote-box\" // wrapper\n\tid=\"text\" // element\n\tid=\"author\" // element\n\tid=\"new-quote\" // clickable-element\n\tid=\"tweet-quote\" // clickable a tag\n\nScenario:\n\tFirst Load:\n\t\t-quote machine displays random quote targeting id=\"text\"\n\t\t-with quote author targeting id=\"author\"\n\t#new-quote was clicked:\n\t\t-quote machine should fetch a new quote with it's author\n\tClick of tweet quote:\n\t\t-should be able to tweet the quote with twitter.com/intent/tweet\n\nCondition:\n\t-#quote-box must be centered\n\n*/\n","import QuoteMachine from './components/QuoteMachine';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <QuoteMachine />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}